{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:react/recommended",
        "airbnb",
        "airbnb/hooks",
        "react-app",
        "plugin:import/recommended",
        "plugin:jsx-a11y/recommended",
        "prettier",
        "prettier/react"
    ],
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 12,
        "sourceType": "module"
    },
    "plugins": [
        "prettier",
        "fp",
        "react",
        "react-hooks",
        "import-helpers",
        "jsx-a11y"
    ],
    "rules": {
        "max-len": [
            "warn",
            { "ignoreComments": true, "code": 200, "tabWidth": 4 }
        ],
        "react/no-direct-mutation-state": "error",
        "import/extensions": 0,
        "react/display-name": 0,
        "react/jsx-indent": ["error", 4],
        "react/jsx-indent-props": ["error", 4],
        "react-hooks/rules-of-hooks": "error",
        "react/js-filename-extension": [0, { "extensions": [".js", ".jsx"] }],
        "react/jsx-one-expression-per-line": 0,
        "react/prop-types": "off",
        "no-useless-computed-key": "error",
        "class-methods-use-this": "off",
        "no-param-reassign": "off",
        "arrow-parens": "error",
        "import/no-cycle": "off",
        "import-helpers/order-imports": [
            "warn",
            {
                "newlinesBetween": "always", // new line between groups
                "groups": [],
                "alphabetize": {
                    "order": "asc",
                    "ignoreCase": true
                }
            }
        ],

        // Allow jsx tags inside .js files.
        "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
        // Disable props spreading (<App {...props} />) warning.
        "react/jsx-props-no-spreading": 0,
        // Allow modules with named exports only.
        "import/prefer-default-export": 0,
        // Force {foo: "bar"} object literal syntax.
        "object-curly-spacing": ["error", "never"],
        // Make prettier code formatting suggestions more verbose.
        "prettier/prettier": ["warn"],
        // Throw warning when <a href="#"> or <a href="javascript:void(0)"> are used. Use <button> instead.
        "jsx-a11y/anchor-is-valid": ["warn", { "aspects": ["invalidHref"] }],
        // Allow using (props) => <Component /> and ({propName}) => <Component /> syntax.
        "react/destructuring-assignment": "off",

        // Below is the set of functional rules to warn developer about accidental mutations, which may cause error in reducers etc.
        // No delete operator.
        "fp/no-delete": "warn",
        // Warning when Object.assign(a, b) used, since it mutates first argument. Object.assign({}, a, b) is ok.
        "fp/no-mutating-assign": "warn",
        // Warning when mutating method (pop, push, reverse, shift, sort, splice, unshift, etc) is used. Ramda and lodash/fp are allowed (_.pop, R.push)
        "fp/no-mutating-methods": [
            "warn",
            {
                "allowedObjects": ["_", "R"]
            }
        ],
        // Warning when mutating operators (++, --, etc) are used, object = {} also. `Component.propTypes`, `Component.defaultProps`, common.js (`module.exports`) and `ref.current` are ok.
        "fp/no-mutation": [
            "warn",
            {
                "commonjs": true,
                "allowThis": true,
                "exceptions": [
                    { "property": "propTypes" },
                    { "property": "defaultProps" },
                    { "property": "current" }
                ]
            }
        ]
    }
}
